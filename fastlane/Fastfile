default_platform(:ios)

desc "Runs the unit tests to ensure the build is working"
lane :test do
  scan(scheme: "TOReachabilityTests", devices: ["iPhone SE"], clean: true)
end

desc "Cuts a new release and distributes it on CocoaPods and Carthage"
lane :release do

  # Fetch the latest tag that would have just been added
  last_tag = last_git_tag
  if !last_tag
    UI.user_error! "--- ERROR: Was unable to locate any git tags. ðŸ¤” ---"
    next
  end

  # Verify the tag conforms to semantic versioning
  latest_version = last_tag.scan(/[vV]?(\d{1,3}\.\d{1,3}\.\d{1,3})/).last.first
  if !latest_version
    UI.success "--- Latest tag doesn't appear to be a new version. Ignoring. ðŸ˜… ---"
    next
  end

  # Update Podspec file and commit
  version_bump_podspec(path: "TOReachability.podspec", version_number: latest_version)
  git_commit(path: "TOReachability.podspec", message: "Bumped Podspec to v" + latest_version)

  # Update framework version and commit
  set_info_plist_value(path: "TOReachabilityFramework/Info.plist", key: "CFBundleShortVersionString", value: latest_version)
  git_commit(path: "TOReachabilityFramework/Info.plist", message: "Bumped Framework Version to v" + latest_version)

  # Commit both version bumps
  # push_to_git_remote

  # Publish to CocoaPods trunk
  # pod_push

  # Finally, create a GitHub release
  changelog_contents = File.read("CHANGELOG.md")
  print(changelog_contents)

end